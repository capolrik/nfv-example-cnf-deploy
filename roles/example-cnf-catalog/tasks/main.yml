---
- name: check operator version
  fail:
    msg: "operator_version is required"
  when: "operator_version|length == 0"

- name: check if catalogsource crd is present
  k8s_info:
    kind: CustomResourceDefinition
    name: catalogsources.operators.coreos.com
  register: crd_info
  retries: 1
  delay: 5
  until: crd_info.resources|length != 0
  failed_when: crd_info.resources|length == 0

- name: Inspect index image
  shell:
    cmd: >
      skopeo inspect docker://{{ catalog_image }}
  register: skopeo_inspect
  until: skopeo_inspect.rc == 0
  retries: 5
  delay: 5

- name: Get index digest
  set_fact:
    index_digest: "{{ skopeo_inspect.stdout | from_json | json_query('Digest') }}"

- name: create catalogsource object for example-cnf
  k8s:
    state: present
    definition:
      apiVersion: operators.coreos.com/v1alpha1
      kind: CatalogSource
      metadata:
        name: "{{ catalog_name }}"
        namespace: openshift-marketplace
      spec:
        sourceType: grpc
        image: "{{ registry_url }}/{{ repo_name }}/{{ catalog_name }}@{{ index_digest }}"
        displayName: NFV Example CNF Catalog
        updateStrategy:
          registryPoll:
            interval: 30m

- name: wait for testpmd-operator packagemanifests creation
  k8s_info:
    api_version: packages.operators.coreos.com/v1
    kind: PackageManifest
    name: testpmd-operator
    namespace: default
  register: pkg_manifest_testpmd
  retries: 60
  delay: 5
  until: pkg_manifest_testpmd.resources|length != 0
  failed_when: pkg_manifest_testpmd.resources|length == 0

- name: wait for trex-operator packagemanifests creation
  k8s_info:
    api_version: packages.operators.coreos.com/v1
    kind: PackageManifest
    name: trex-operator
    namespace: default
  register: pkg_manifest_trex
  retries: 30
  delay: 5
  until: pkg_manifest_trex.resources|length != 0
  failed_when: pkg_manifest_trex.resources|length == 0

- name: create namespace
  k8s:
    api_version: v1
    name: "{{ cnf_namespace }}"
    kind: Namespace

- name: create operatorgroup
  k8s:
    api_version: operators.coreos.com/v1
    name: example-cnf-operator-group
    kind: OperatorGroup
    namespace: "{{ cnf_namespace }}"
    definition:
      spec:
        targetNamespaces:
          - "{{ cnf_namespace }}"
